//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Repository.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class M02_BasicEntities : DbContext
    {
        public M02_BasicEntities()
            : base("name=M02_BasicEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<M02_EmailSettings> M02_EmailSettings { get; set; }
        public virtual DbSet<M02_CommonSetting> M02_CommonSetting { get; set; }
        public virtual DbSet<M02_DefaultCommonSetting> M02_DefaultCommonSetting { get; set; }
    
        public virtual ObjectResult<spCreateDefaultCommonSetting_Result> spCreateDefaultCommonSetting(string key, string value, string common_type, string setting_for)
        {
            var keyParameter = key != null ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var common_typeParameter = common_type != null ?
                new ObjectParameter("common_type", common_type) :
                new ObjectParameter("common_type", typeof(string));
    
            var setting_forParameter = setting_for != null ?
                new ObjectParameter("setting_for", setting_for) :
                new ObjectParameter("setting_for", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCreateDefaultCommonSetting_Result>("spCreateDefaultCommonSetting", keyParameter, valueParameter, common_typeParameter, setting_forParameter);
        }
    }
}
